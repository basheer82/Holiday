{"ast":null,"code":"var _jsxFileName = \"/Users/nathirthiabat/Desktop/GitHub-Holiday/Holiday/src/SelectedLocImgGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from './context';\nimport locationsData from './locationsData';\nimport ImgGrid from './ImgGrid';\nimport HotelImgGrid from './HotelImgGrid';\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectedLocImgGrid = () => {\n  _s();\n\n  const {\n    location,\n    indx,\n    setIndx,\n    imgUrl,\n    setImgUrl,\n    click,\n    setClick\n  } = useGlobalContext();\n  const [locatn, setLocatn] = useState(['']);\n  const [locatnImg, setLocatnImg] = useState(['']);\n  const [temp, setTemp] = useState(0);\n  const [ndx, setNdx] = useState(0);\n  const [clicked, setClicked] = useState(false);\n\n  const handleNext = () => {\n    if (indx < locatn.length - 1) {\n      setLocatn(locatn.slice(indx + 1, locatn.length));\n    }\n\n    if (indx + 1 < locatn.length - 2) {\n      setIndx(indx + 1);\n    }\n\n    console.log('indx: ' + indx);\n  };\n\n  const handlePrev = () => {\n    let b = locationsData.find(_ref => {\n      let {\n        city\n      } = _ref;\n      return city === location;\n    });\n\n    if (indx >= 1) {\n      setLocatn(b.img.slice(indx - 1, b.img.length));\n      setIndx(indx - 1);\n    }\n  };\n\n  const setDat = () => {\n    if (location) {\n      let locDta = locationsData.find(_ref2 => {\n        let {\n          city\n        } = _ref2;\n        return city === location;\n      });\n      setLocatn(locDta.img);\n      setLocatnImg(locDta.img);\n    }\n  };\n\n  useEffect(() => {\n    setDat();\n    setIndx(0);\n    setTemp(0);\n    setClick(false);\n  }, [location]);\n\n  const handleClick = number => {\n    setClick(true);\n    setNdx(number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loc-grid-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePrev(),\n        className: \"loc-prev-btn\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(FaAngleLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 82\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), locatn.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleClick(index),\n          className: \"loc-grid-div-current\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"grid-loc-img\",\n            onClick: () => setImgUrl(item),\n            src: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNext(),\n        className: \"loc-next-btn\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(FaAngleRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), click && /*#__PURE__*/_jsxDEV(HotelImgGrid, {\n      setClick: setClick,\n      it: locatnImg,\n      imgNdx: ndx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectedLocImgGrid, \"CI+3NXHVfz4bridpzLETDRG+Dec=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = SelectedLocImgGrid;\nexport default SelectedLocImgGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedLocImgGrid\");","map":{"version":3,"sources":["/Users/nathirthiabat/Desktop/GitHub-Holiday/Holiday/src/SelectedLocImgGrid.js"],"names":["React","useState","useEffect","useGlobalContext","locationsData","ImgGrid","HotelImgGrid","FaAngleLeft","FaAngleRight","SelectedLocImgGrid","location","indx","setIndx","imgUrl","setImgUrl","click","setClick","locatn","setLocatn","locatnImg","setLocatnImg","temp","setTemp","ndx","setNdx","clicked","setClicked","handleNext","length","slice","console","log","handlePrev","b","find","city","img","setDat","locDta","handleClick","number","map","item","index"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport {useGlobalContext} from './context'\nimport locationsData from './locationsData'\nimport ImgGrid from './ImgGrid'\nimport HotelImgGrid from './HotelImgGrid'\nimport {FaAngleLeft, FaAngleRight} from \"react-icons/fa\";\n\n\nconst SelectedLocImgGrid = ()=>{\n    const{location,indx, setIndx, imgUrl, setImgUrl, click, setClick} = useGlobalContext()\n\n    const [locatn, setLocatn] = useState([''])\n    const[locatnImg, setLocatnImg] = useState([''])\n    const [temp, setTemp] = useState(0)\n    const[ndx, setNdx] = useState(0)\n    const [clicked, setClicked] = useState(false)\n\n \n    const handleNext = ()=>{\n\n       if(indx  < locatn.length-1){\n        setLocatn(locatn.slice((indx)+1, locatn.length))\n  \n       \n    }\n    if(indx + 1 < locatn.length-2){\n    setIndx(indx+1)}\n        console.log('indx: ' + indx);\n    \n    }\n\n    const handlePrev = ()=>{  \n    \n        let b = locationsData.find(({city})=> city===location) \n    if((indx) >= 1){\n\n    setLocatn(b.img.slice((indx)-1, b.img.length))\n    setIndx(indx-1)\n    \n \n\n}\n    }\n    const setDat = ()=>{\n        if(location){\n        let locDta=  locationsData.find(({city})=> city===location)  \n        setLocatn(locDta.img)\n        setLocatnImg(locDta.img)\n        }\n    }\n    useEffect(()=>{\n   \n      setDat()\n      setIndx(0)\n      setTemp(0)\n      setClick(false)\n      \n    },[location])\n\n\n const handleClick = (number)=>{\n\n    setClick(true)\n     setNdx(number)}\n  \n \n    return(\n        <>\n         <div className ='loc-grid-div'>\n                <button onClick = {()=>handlePrev()} className = 'loc-prev-btn'> <FaAngleLeft/></button>\n                \n                     {locatn.map((item, index)=>{\n  \n                 return( \n                  \n                     <div onClick = {()=> handleClick(index) }  className = 'loc-grid-div-current' >\n                    \n                      <img className ='grid-loc-img' onClick = {()=>setImgUrl(item)}src = {item}  /> \n                     </div>\n                  \n                 \n                 )\n                     })\n                     }\n          \n           <button onClick= {()=>handleNext()}  className = 'loc-next-btn'> <FaAngleRight/></button>\n       \n         </div>\n         { click && <HotelImgGrid setClick = {setClick} it = {locatnImg} imgNdx ={ndx} /> }\n                   \n        </>\n    )\n\n}\nexport default SelectedLocImgGrid"]},"metadata":{},"sourceType":"module"}