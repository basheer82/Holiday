{"ast":null,"code":"var _jsxFileName = \"/Users/nathirthiabat/Desktop/GitHub-Holiday/Holiday/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport holidays from './holidayPlan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [location, setLocation] = useState('Paris');\n  const [holday, setHoliday] = useState();\n  const [plan, setPlan] = useState();\n  const [indx, setIndx] = useState(0);\n  const [hotels, setHotels] = useState([]);\n  const [imgUrl, setImgUrl] = useState('');\n  const [click, setClick] = useState(false);\n  const [hotelImgClick, setHotelImgClick] = useState(false);\n\n  const selectLocation = locationName => {\n    setLocation(locationName);\n    setPlan(holidays[0].daysPlan[0].day1[1]);\n  };\n\n  const selectHoliday = () => {\n    //  holidays.find((item)=>item.country == country)\n    console.log('selectHoliday');\n  };\n\n  const handleBtnClick = () => {\n    setClick(!click);\n    console.log('click: ' + click);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      location,\n      hotels,\n      setLocation,\n      setHotels,\n      selectLocation,\n      plan,\n      indx,\n      setIndx,\n      imgUrl,\n      setImgUrl,\n      click,\n      setClick,\n      handleBtnClick,\n      hotelImgClick,\n      setHotelImgClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppProvider, \"/q/aO9xmRFPPGLQhjAbfiTn75Xs=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/nathirthiabat/Desktop/GitHub-Holiday/Holiday/src/context.js"],"names":["React","useState","useContext","holidays","AppContext","createContext","AppProvider","children","location","setLocation","holday","setHoliday","plan","setPlan","indx","setIndx","hotels","setHotels","imgUrl","setImgUrl","click","setClick","hotelImgClick","setHotelImgClick","selectLocation","locationName","daysPlan","day1","selectHoliday","console","log","handleBtnClick","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEC,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB;;AACD,MAAMC,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE9B,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,OAAD,CAAvC;AACA,QAAK,CAACS,MAAD,EAASC,UAAT,IAAuBV,QAAQ,EAApC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAK,CAACe,MAAD,EAASC,SAAT,IAAuBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAK,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,KAAD,CAAjD;;AAEA,QAAMuB,cAAc,GAAIC,YAAD,IAAgB;AACnChB,IAAAA,WAAW,CAACgB,YAAD,CAAX;AAEAZ,IAAAA,OAAO,CAAEV,QAAQ,CAAC,CAAD,CAAR,CAAYuB,QAAZ,CAAqB,CAArB,EAAwBC,IAAxB,CAA6B,CAA7B,CAAF,CAAP;AAEH,GALD;;AASA,QAAMC,aAAa,GAAG,MAAI;AAEtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAGH,GAND;;AAOA,QAAMC,cAAc,GAAG,MAAI;AACvBV,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYV,KAAxB;AACH,GAHD;;AAIA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAI;AACLZ,MAAAA,QADK;AAELQ,MAAAA,MAFK;AAGLP,MAAAA,WAHK;AAILQ,MAAAA,SAJK;AAKLO,MAAAA,cALK;AAMLZ,MAAAA,IANK;AAOLE,MAAAA,IAPK;AAQLC,MAAAA,OARK;AASLG,MAAAA,MATK;AAULC,MAAAA,SAVK;AAWLC,MAAAA,KAXK;AAYLC,MAAAA,QAZK;AAaLU,MAAAA,cAbK;AAcLT,MAAAA,aAdK;AAeLC,MAAAA;AAfK,KADb;AAAA,cAmBMhB;AAnBN;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CArDD;;GAAMD,W;;KAAAA,W;AAuDN,OAAO,MAAM0B,gBAAgB,GAAG,MAAI;AAAA;;AAChC,SAAO9B,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM;;IAAM4B,gB;;AAIb,SAAQ5B,UAAR,EAAoBE,WAApB","sourcesContent":["import React , {useState, useContext} from 'react'\nimport holidays from './holidayPlan'\n\n const AppContext = React.createContext()\nconst AppProvider = ({children})=>{\n\n    const[location, setLocation] = useState('Paris')\n    const[holday, setHoliday] = useState()\n    const [plan, setPlan] = useState()\n    const [indx, setIndx] = useState(0)\n    const[hotels, setHotels] =  useState([])\n    const[imgUrl, setImgUrl] = useState('')\n    const [click, setClick] = useState(false)\n    const[hotelImgClick, setHotelImgClick] = useState(false)\n\n    const selectLocation = (locationName)=>{\n        setLocation(locationName)\n     \n        setPlan( holidays[0].daysPlan[0].day1[1])\n       \n    }\n\n\n\n    const selectHoliday = ()=>{\n        \n        //  holidays.find((item)=>item.country == country)\n        console.log('selectHoliday')\n        \n       \n    }\n    const handleBtnClick = ()=>{\n        setClick(!click)\n        console.log('click: ' + click)\n    }\n    return (\n        <AppContext.Provider\n            value = {{\n                location,\n                hotels,\n                setLocation,\n                setHotels,\n                selectLocation,\n                plan,\n                indx,\n                setIndx,\n                imgUrl,\n                setImgUrl,\n                click,\n                setClick,\n                handleBtnClick,\n                hotelImgClick,\n                setHotelImgClick\n\n            }}\n            >{children}</AppContext.Provider>\n    )\n}\n\nexport const useGlobalContext = ()=>{\n    return useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}